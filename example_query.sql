-- Example query to bring together the CTEs in /model_features
-- CTEs are pasted directly from .sql files in /model_features
-- Base data is generated by <TBC - Lorraine to add query to generate base conversion table>?


-- ############# 1. Help page visits #############
with help_article_value as (
    select help.ARTICLE__ENGLISH_TITLE,
           median(lifetime.LIFETIME_XCCY_INVOICE_VALUE_GBP) as median_profile_xccy_volume, -- avg was skewed. could do a different percentile.
           count(*) as count_profiles
    FROM rpt_cs_data.analytical_help_centre__events help
             join reports.REPORT_USER_PROFILE_LIFETIME_ACTIONS lifetime
                  on help.PROFILE__ID = lifetime.USER_PROFILE_ID
    WHERE 1 = 1
      AND user__id IS NOT NULL
      AND EVENT__NAME = 'help flows - page view - article'
    group by 1
    having count(*) > 3000 -- filter out small data
    order by 2 desc
),

user_help_events as (
    SELECT
      user__id AS user_id
      , EVENT__ID
      , event__ts AS help_centre_event_ts
      , user.DATE_CREATED as registration_date
      , event__name AS help_centre_event_name
      , help.article__english_title AS help_centre_article
      , help_article_value.median_profile_xccy_volume as article_viewer_median_lifetime_xccy_volume
      , dateadd(HOUR, 12, event__ts) AS help_centre_event_twelve_hours_after_ts
    FROM rpt_cs_data.analytical_help_centre__events help
        left join fx.user user
            on help.USER__ID = user.id
        -- we only want help page visits before the user converted
        inner join SANDBOX_DB.SANDBOX_ALL.HOMEPAGE_EXPERIMENT_MODEL_BASE_TABLE base
            on help.USER__ID = base.USER_ID
                and help.EVENT__TS < base.FIRST_PROXY_EVENT_TIME
        -- TO DO: INNER JOIN WHERE HELP EVENTS ARE BEFORE CONVERSION EVENT
        join help_article_value on help.ARTICLE__ENGLISH_TITLE = help_article_value.ARTICLE__ENGLISH_TITLE
    WHERE 1 = 1
          AND user__id IS NOT NULL
          AND help_centre_event_name = 'help flows - page view - article'
)

, help_page_visit_events__user_level as (
    select user_id,
           count(distinct EVENT__ID)                       as count_distinct_help_page_visit_events_before_conversion,
           avg(article_viewer_median_lifetime_xccy_volume) as average_help_event_customer_lifetime_xccy_volume, -- average across all help pages visited before conversion for: the median customer lifetime XCCY volume for customers who visit specific help pages
           max(article_viewer_median_lifetime_xccy_volume) as max_help_event_customer_lifetime_xccy_volume      -- max of all help pages visited before conversion for: the median customer lifetime XCCY volume for customers who visit specific help pages
    from user_help_events
    group by user_id
),

-- ############# 2. onboarding data #############
onboarding_data__user_level as (
    select USER_ID,
           -- fields likely to be useful
           FIRST_INTENT,      -- about 60% complete
           SAW_INTENT_PICKER, -- might be useful to consider alongside first_intent - not sure what causes this though
           channel,           -- about 40% complete - could get marketing info from elsewhere
           CHANNEL_GROUPS,    -- could get marketing info from elsewhere
           SIGNUP_PLATFORM   -- 4% complete (down from ~100% in the first half of 2021, falling since then) -- this would be useful
    from reports.USER_ONBOARDING_CONVERSION
),

-- ############# 3. web page visits #############
visit_base_table as (
    select
        fu.ID,
        a.REGISTRATION_TIMESTAMP_AT,
        sb.FIRST_PROXY_EVENT_TIME,
        a.VISIT_DATE_AT,
        a.VISIT_ID,
        a.LANGUAGE,
        a.DEVICE,
        a.COUNTRY,
        min(VISIT_DATE_AT) over (partition by fu.ID) first_visit_time,

        date_trunc(day,a.REGISTRATION_TIMESTAMP_AT) registration_date,
        date_trunc(day,sb.FIRST_PROXY_EVENT_TIME) first_proxy_event_date,
        date_trunc(day,a.VISIT_DATE_AT) visit_date,

        rank() over (partition by  fu.ID order by VISIT_DATE_AT asc) rank_of_visit,
        datediff(day,min(VISIT_DATE_AT) over (partition by fu.ID),REGISTRATION_TIMESTAMP_AT) days_from_first_visit_to_registration,
        datediff(day,REGISTRATION_TIMESTAMP_AT,sb.FIRST_PROXY_EVENT_TIME) days_from_registration_to_proxy_conversion,
        URL,
        case when VISIT_DATE_AT <= REGISTRATION_TIMESTAMP_AT then 1 else 0 end as Is_before_registration,
        case when (VISIT_DATE_AT > REGISTRATION_TIMESTAMP_AT AND VISIT_DATE_AT <= SB.FIRST_PROXY_EVENT_time ) then 1 else 0 end as Is_between_registration_and_conversion,
        case when URL like 'https://wise.com/' then 1 else 0 end as Is_URL_wise_com,
        case when URL like 'https://wise.com/us/' then 1 else 0 end as Is_URL_wise_com_US,
        case when URL like 'https://transferwise.com/' then 1 else 0 end as Is_URL_transferwise_com,
        case when URL like 'https://wise.com/recipients/' then 1 else 0 end as Is_URL_recipient,
        case when URL like 'https://wise.com/gb/business/' then 1 else 0 end as Is_URL_gb_business,
        case when URL like 'https://wise.com/login/' then 1 else 0 end as Is_URL_login,
        case when URL like 'https://wise.com/send/' then 1 else 0 end as Is_URL_send,
        case when URL like 'https://transferwise.com/send/' then 1 else 0 end as Is_URL_transferwise_com_send,
        case when URL like 'https://wise.com/home/' then 1 else 0 end as Is_URL_home,
        case when URL like 'https://wise.com/card-management' then 1 else 0 end as Is_URL_card_management,
        case when URL like 'https://transferwise.com/transferflow' then 1 else 0 end as Is_URL_transferflow,
        case when URL like 'https://wise.com/help/' then 1 else 0 end as Is_URL_help,
        case when URL like 'https://wise.com/account-selector/' then 1 else 0 end as Is_URL_account_selector,
        case when URL like 'https://wise.com/cards/' then 1 else 0 end as Is_URL_cards,
        case when URL like 'https://transferwise.com/recipients/' then 1 else 0 end as Is_URL_transferwise_recipients,
        case when URL like 'https://wise.com/get-started/' then 1 else 0 end as Is_URL_get_started,
        case when URL like 'https://wise.com/flows/open-balance' then 1 else 0 end as Is_URL_open_balance,
        case when URL like 'https://wise.com/gb/multi-currency-account/' then 1 else 0 end as Is_URL_multi_currency_account,
        case when URL like 'https://wise.com/invite' then 1 else 0 end as Is_URL_invite,
        case when URL like 'https://wise.com/profile/create/' then 1 else 0 end as Is_URL_profile_create


    from rpt_marketing.dim_visits__touchpoints  a
    left join fx.USER fu on fu.ID = a.USER_ID
    left join SANDBOX_DB.SANDBOX_ALL.homepage_experiment_model_base_table sb on sb.USER_Id = fu.ID
    where 1=1
    and fu.ID is not null
    -- and fu.ID in (26003721, 40871901,36999442,35400617)
    -- and VISIT_DATE_AT <= REGISTRATION_TIMESTAMP_AT
)

, first_visit_table as (
    select
        *
    from visit_base_table a
    where 1=1
    and rank_of_visit=1
)

, visit_summary_table as (
    select
        a.id as user_id,
        a.first_visit_time,
        a.REGISTRATION_TIMESTAMP_AT,
        a.first_proxy_event_time,
        f.URL as first_visit_URL,
        a.LANGUAGE,
        a.DEVICE,
        a.country,
        a.days_from_first_visit_to_registration,
        a.days_from_registration_to_proxy_conversion,

        --pre post visit
        count( distinct case when a.is_before_registration =1 then a.visit_date else null end) as ttl_unique_days_visited_pre_registration,
        count( distinct case when a.Is_between_registration_and_conversion =1 then a.visit_date else null end) as ttl_unique_days_visited_between_registration_conversion,
        sum(a.Is_before_registration) as ttl_URL_visits_before_registration,
        sum(a.Is_between_registration_and_conversion) as ttl_URL_visits_between_registration_and_conversion,

        --pre post url  features
        sum(iff(a.Is_before_registration=1,a.Is_URL_wise_com,0)) as ttl_Is_URL_wise_com_pre_registration,
        sum(iff(a.Is_before_registration=1,a.IS_URL_WISE_COM_US,0)) as ttl_Is_URL_wise_com_pre_registration,
        sum(iff(a.Is_before_registration=1,a.Is_URL_transferwise_com,0)) as ttl_Is_URL_transferwise_com_pre_registration,
        sum(iff(a.Is_before_registration=1,a.Is_URL_recipient,0)) as ttl_Is_URL_recipient_pre_registration,

        sum(iff(a.Is_before_registration=1,a.Is_URL_gb_business,0)) as ttl_Is_URL_gb_business_pre_registration,
        sum(iff(a.Is_before_registration=1,a.Is_URL_login,0)) as ttl_Is_URL_login_pre_registration,
        sum(iff(a.Is_before_registration=1,a.Is_URL_send,0)) as ttl_Is_URL_send_pre_registration,
        sum(iff(a.Is_before_registration=1,a.Is_URL_transferwise_com_send,0)) as ttl_Is_URL_transferwise_com_send_pre_registration,
        sum(iff(a.Is_before_registration=1,a.Is_URL_home,0)) as ttl_Is_URL_home_pre_registration,
        sum(iff(a.Is_before_registration=1,a.Is_URL_card_management,0)) as ttl_Is_URL_card_management_pre_registration,
        sum(iff(a.Is_before_registration=1,a.Is_URL_transferflow,0)) as ttl_Is_URL_transferflow_pre_registration,
        sum(iff(a.Is_before_registration=1,a.Is_URL_account_selector,0)) as ttl_Is_URL_account_selector_pre_registration,
        sum(iff(a.Is_before_registration=1,a.Is_URL_cards,0)) as ttl_Is_URL_cards_pre_registration,

        sum(iff(a.Is_before_registration=1,a.Is_URL_transferwise_recipients,0)) as ttl_Is_URL_transferwise_recipients_pre_registration,
        sum(iff(a.Is_before_registration=1,a.Is_URL_get_started,0)) as ttl_Is_URL_get_started_pre_registration,
        sum(iff(a.Is_before_registration=1,a.Is_URL_open_balance,0)) as ttl_Is_URL_open_balance_pre_registration,
        sum(iff(a.Is_before_registration=1,a.Is_URL_multi_currency_account,0)) as ttl_Is_URL_multi_currency_account_pre_registration,
        sum(iff(a.Is_before_registration=1,a.Is_URL_invite,0)) as ttl_Is_URL_invite_pre_registration,
        sum(iff(a.Is_before_registration=1,a.Is_URL_profile_create,0)) as ttl_Is_URL_profile_create_pre_registration,

        --between registration and conversion
        sum(iff(a.Is_between_registration_and_conversion=1,a.Is_URL_wise_com,0)) as ttl_Is_URL_wise_com_post_registration,
        sum(iff(a.Is_between_registration_and_conversion=1,a.IS_URL_WISE_COM_US,0)) as ttl_Is_URL_wise_com_post_registration,
        sum(iff(a.Is_between_registration_and_conversion=1,a.Is_URL_transferwise_com,0)) as ttl_Is_URL_transferwise_com_post_registration,
        sum(iff(a.Is_between_registration_and_conversion=1,a.Is_URL_recipient,0)) as ttl_Is_URL_recipient_post_registration,
        sum(iff(a.Is_between_registration_and_conversion=1,a.Is_URL_gb_business,0)) as ttl_Is_URL_gb_business_post_registration,
        sum(iff(a.Is_between_registration_and_conversion=1,a.Is_URL_login,0)) as ttl_Is_URL_login_post_registration,
        sum(iff(a.Is_between_registration_and_conversion=1,a.Is_URL_send,0)) as ttl_Is_URL_send_post_registration,
        sum(iff(a.Is_between_registration_and_conversion=1,a.Is_URL_transferwise_com_send,0)) as ttl_Is_URL_transferwise_com_send_post_registration,
        sum(iff(a.Is_between_registration_and_conversion=1,a.Is_URL_home,0)) as ttl_Is_URL_home_post_registration,
        sum(iff(a.Is_between_registration_and_conversion=1,a.Is_URL_card_management,0)) as ttl_Is_URL_card_management_post_registration,
        sum(iff(a.Is_between_registration_and_conversion=1,a.Is_URL_transferflow,0)) as ttl_Is_URL_transferflow_post_registration,
        sum(iff(a.Is_between_registration_and_conversion=1,a.Is_URL_account_selector,0)) as ttl_Is_URL_account_selector_post_registration,
        sum(iff(a.Is_between_registration_and_conversion=1,a.Is_URL_cards,0)) as ttl_Is_URL_cards_post_registration,
        sum(iff(a.Is_between_registration_and_conversion=1,a.Is_URL_transferwise_recipients,0)) as ttl_Is_URL_transferwise_recipients_post_registration,
        sum(iff(a.Is_between_registration_and_conversion=1,a.Is_URL_get_started,0)) as ttl_Is_URL_get_started_post_registration,
        sum(iff(a.Is_between_registration_and_conversion=1,a.Is_URL_open_balance,0)) as ttl_Is_URL_open_balance_post_registration,
        sum(iff(a.Is_between_registration_and_conversion=1,a.Is_URL_multi_currency_account,0)) as ttl_Is_URL_multi_currency_account_post_registration,
        sum(iff(a.Is_between_registration_and_conversion=1,a.Is_URL_invite,0)) as ttl_Is_URL_invite_post_registration,
        sum(iff(a.Is_between_registration_and_conversion=1,a.Is_URL_profile_create,0)) as ttl_Is_URL_profile_create_post_registration
    from visit_base_table a
    left join first_visit_table f on a.ID = f.ID
    group by 1,2,3,4,5,6,7,8,9,10
)

select *
from SANDBOX_DB.SANDBOX_ALL.homepage_experiment_model_base_table base
    left join help_page_visit_events__user_level help on base.user_id = help.user_id
    left join onboarding_data__user_level onboarding on base.user_id = onboarding.user_id
    left join visit_summary_table on base.user_id = visit_summary_table.user_id